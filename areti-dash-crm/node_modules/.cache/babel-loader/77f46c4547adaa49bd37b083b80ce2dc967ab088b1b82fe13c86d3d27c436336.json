{"ast":null,"code":"import{Auth0Client}from'@auth0/auth0-spa-js';import config from'../config';import axios from'axios';let auth0Client=null;let cachedUser=null;// Initialize Auth0 client\nconst initAuth0=async()=>{if(auth0Client)return auth0Client;auth0Client=new Auth0Client({domain:config.auth0Domain,client_id:config.auth0ClientId,redirect_uri:`${window.location.origin}/callback`,audience:config.audience,cacheLocation:'localstorage'});try{// Handle callback if code is present in URL\nif(window.location.search.includes(\"code=\")){await auth0Client.handleRedirectCallback();window.history.replaceState({},document.title,\"/\");}// Check if user is authenticated\nconst isAuthenticated=await auth0Client.isAuthenticated();if(isAuthenticated){// Get user info and cache it\ncachedUser=await auth0Client.getUser();// Get the Auth0 token\nconst token=await auth0Client.getTokenSilently();// Exchange with our service\ntry{const response=await axios.post(`${config.authServiceUrl}/auth/token`,{token});// Store in localStorage\nif(response.data&&response.data.token){const userInfo={name:cachedUser.name||cachedUser.nickname||'User',email:cachedUser.email||'user@example.com',role:'admin',// Customize as needed\ntoken:response.data.token,timestamp:new Date().getTime()};localStorage.setItem('aretiUser',JSON.stringify(userInfo));}}catch(error){console.error('Token exchange error:',error);}}}catch(error){console.error('Auth0 initialization error:',error);}return auth0Client;};// Authentication service\nconst AuthService={// Initialize\ninit:async()=>{try{// Check for cached user in localStorage\nconst userFromStorage=localStorage.getItem('aretiUser');if(userFromStorage){try{const userData=JSON.parse(userFromStorage);const now=new Date().getTime();// Check if token is not expired (24 hour validity)\nif(now-userData.timestamp<24*60*60*1000){console.log('Found valid user in localStorage');cachedUser=userData;return true;}}catch(e){console.error('Error parsing user from localStorage:',e);}}// Initialize Auth0\nawait initAuth0();// Return authentication status\nreturn!!cachedUser;}catch(error){console.error('Auth initialization error:',error);return false;}},// Login\nlogin:async()=>{try{const client=await initAuth0();await client.loginWithRedirect();}catch(error){console.error('Login error:',error);}},// Logout\nlogout:async()=>{try{// Clear local storage\nlocalStorage.removeItem('aretiUser');// Clear cached user\ncachedUser=null;// Logout from Auth0\nconst client=await initAuth0();await client.logout({returnTo:window.location.origin});}catch(error){console.error('Logout error:',error);window.location.reload();}},// Check if authenticated\nisAuthenticated:()=>{return!!cachedUser||!!localStorage.getItem('aretiUser');},// Get user profile\ngetUserProfile:()=>{if(cachedUser)return cachedUser;const userFromStorage=localStorage.getItem('aretiUser');if(userFromStorage){try{return JSON.parse(userFromStorage);}catch(error){console.error('Error parsing user data:',error);}}return null;},// Get authorization header\ngetAuthHeader:()=>{const userFromStorage=localStorage.getItem('aretiUser');if(userFromStorage){try{const userData=JSON.parse(userFromStorage);if(userData.token){return{'Authorization':`Bearer ${userData.token}`};}}catch(error){console.error('Error creating auth header:',error);}}return{};}};export default AuthService;","map":{"version":3,"names":["Auth0Client","config","axios","auth0Client","cachedUser","initAuth0","domain","auth0Domain","client_id","auth0ClientId","redirect_uri","window","location","origin","audience","cacheLocation","search","includes","handleRedirectCallback","history","replaceState","document","title","isAuthenticated","getUser","token","getTokenSilently","response","post","authServiceUrl","data","userInfo","name","nickname","email","role","timestamp","Date","getTime","localStorage","setItem","JSON","stringify","error","console","AuthService","init","userFromStorage","getItem","userData","parse","now","log","e","login","client","loginWithRedirect","logout","removeItem","returnTo","reload","getUserProfile","getAuthHeader"],"sources":["C:/Users/Administrator/Desktop/aretialliance/areti-dash-crm/src/services/auth.js"],"sourcesContent":["import { Auth0Client } from '@auth0/auth0-spa-js';\r\nimport config from '../config';\r\nimport axios from 'axios';\r\n\r\nlet auth0Client = null;\r\nlet cachedUser = null;\r\n\r\n// Initialize Auth0 client\r\nconst initAuth0 = async () => {\r\n  if (auth0Client) return auth0Client;\r\n  \r\n  auth0Client = new Auth0Client({\r\n    domain: config.auth0Domain,\r\n    client_id: config.auth0ClientId,\r\n    redirect_uri: `${window.location.origin}/callback`,\r\n    audience: config.audience,\r\n    cacheLocation: 'localstorage'\r\n  });\r\n\r\n  try {\r\n    // Handle callback if code is present in URL\r\n    if (window.location.search.includes(\"code=\")) {\r\n      await auth0Client.handleRedirectCallback();\r\n      window.history.replaceState({}, document.title, \"/\");\r\n    }\r\n    \r\n    // Check if user is authenticated\r\n    const isAuthenticated = await auth0Client.isAuthenticated();\r\n    \r\n    if (isAuthenticated) {\r\n      // Get user info and cache it\r\n      cachedUser = await auth0Client.getUser();\r\n      \r\n      // Get the Auth0 token\r\n      const token = await auth0Client.getTokenSilently();\r\n      \r\n      // Exchange with our service\r\n      try {\r\n        const response = await axios.post(`${config.authServiceUrl}/auth/token`, {\r\n          token\r\n        });\r\n        \r\n        // Store in localStorage\r\n        if (response.data && response.data.token) {\r\n          const userInfo = {\r\n            name: cachedUser.name || cachedUser.nickname || 'User',\r\n            email: cachedUser.email || 'user@example.com',\r\n            role: 'admin', // Customize as needed\r\n            token: response.data.token,\r\n            timestamp: new Date().getTime()\r\n          };\r\n          \r\n          localStorage.setItem('aretiUser', JSON.stringify(userInfo));\r\n        }\r\n      } catch (error) {\r\n        console.error('Token exchange error:', error);\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.error('Auth0 initialization error:', error);\r\n  }\r\n  \r\n  return auth0Client;\r\n};\r\n\r\n// Authentication service\r\nconst AuthService = {\r\n  // Initialize\r\n  init: async () => {\r\n    try {\r\n      // Check for cached user in localStorage\r\n      const userFromStorage = localStorage.getItem('aretiUser');\r\n      if (userFromStorage) {\r\n        try {\r\n          const userData = JSON.parse(userFromStorage);\r\n          const now = new Date().getTime();\r\n          \r\n          // Check if token is not expired (24 hour validity)\r\n          if (now - userData.timestamp < 24 * 60 * 60 * 1000) {\r\n            console.log('Found valid user in localStorage');\r\n            cachedUser = userData;\r\n            return true;\r\n          }\r\n        } catch (e) {\r\n          console.error('Error parsing user from localStorage:', e);\r\n        }\r\n      }\r\n      \r\n      // Initialize Auth0\r\n      await initAuth0();\r\n      \r\n      // Return authentication status\r\n      return !!cachedUser;\r\n    } catch (error) {\r\n      console.error('Auth initialization error:', error);\r\n      return false;\r\n    }\r\n  },\r\n\r\n  // Login\r\n  login: async () => {\r\n    try {\r\n      const client = await initAuth0();\r\n      await client.loginWithRedirect();\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n    }\r\n  },\r\n\r\n  // Logout\r\n  logout: async () => {\r\n    try {\r\n      // Clear local storage\r\n      localStorage.removeItem('aretiUser');\r\n      \r\n      // Clear cached user\r\n      cachedUser = null;\r\n      \r\n      // Logout from Auth0\r\n      const client = await initAuth0();\r\n      await client.logout({\r\n        returnTo: window.location.origin\r\n      });\r\n    } catch (error) {\r\n      console.error('Logout error:', error);\r\n      window.location.reload();\r\n    }\r\n  },\r\n\r\n  // Check if authenticated\r\n  isAuthenticated: () => {\r\n    return !!cachedUser || !!localStorage.getItem('aretiUser');\r\n  },\r\n\r\n  // Get user profile\r\n  getUserProfile: () => {\r\n    if (cachedUser) return cachedUser;\r\n    \r\n    const userFromStorage = localStorage.getItem('aretiUser');\r\n    if (userFromStorage) {\r\n      try {\r\n        return JSON.parse(userFromStorage);\r\n      } catch (error) {\r\n        console.error('Error parsing user data:', error);\r\n      }\r\n    }\r\n    \r\n    return null;\r\n  },\r\n\r\n  // Get authorization header\r\n  getAuthHeader: () => {\r\n    const userFromStorage = localStorage.getItem('aretiUser');\r\n    if (userFromStorage) {\r\n      try {\r\n        const userData = JSON.parse(userFromStorage);\r\n        if (userData.token) {\r\n          return {\r\n            'Authorization': `Bearer ${userData.token}`\r\n          };\r\n        }\r\n      } catch (error) {\r\n        console.error('Error creating auth header:', error);\r\n      }\r\n    }\r\n    \r\n    return {};\r\n  }\r\n};\r\n\r\nexport default AuthService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}