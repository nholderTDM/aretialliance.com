{"ast":null,"code":"// services/auth.js\nimport config from'../config';class AuthService{constructor(){this.domain=config.auth0Domain;this.clientId=config.auth0ClientId;this.audience=config.audience;this.tokenKey='auth_token';this.profileKey='user_profile';}init(){return new Promise(resolve=>{// Check if user is returning from Auth0 (authentication callback)\nif(window.location.hash.includes('access_token')){this.handleAuthentication();resolve(true);}else{resolve(this.isAuthenticated());}});}handleAuthentication(){const hash=this.parseHash(window.location.hash);if(hash.access_token){this.setSession(hash);return true;}return false;}parseHash(hash){hash=hash.substring(1).split('&');const result={};hash.forEach(item=>{const[key,value]=item.split('=');result[key]=value;});return result;}setSession(authResult){// Set the time that the access token will expire\nconst expiresAt=JSON.stringify(authResult.expires_in*1000+new Date().getTime());localStorage.setItem('access_token',authResult.access_token);localStorage.setItem('id_token',authResult.id_token);localStorage.setItem('expires_at',expiresAt);// Fetch user profile\nthis.getUserInfo(authResult.access_token);}getUserInfo(accessToken){const url=`https://${this.domain}/userinfo`;fetch(url,{headers:{Authorization:`Bearer ${accessToken}`}}).then(response=>response.json()).then(profile=>{localStorage.setItem(this.profileKey,JSON.stringify(profile));}).catch(error=>console.error('Error fetching user profile:',error));}login(){const redirectUri=`${window.location.origin}/callback`;window.location.href=`https://${this.domain}/authorize?`+`response_type=token&`+`client_id=${this.clientId}&`+`redirect_uri=${encodeURIComponent(redirectUri)}&`+`audience=${encodeURIComponent(this.audience)}&`+`scope=openid profile email`;}logout(){// Clear all authentication data from localStorage\nlocalStorage.removeItem('access_token');localStorage.removeItem('id_token');localStorage.removeItem('expires_at');localStorage.removeItem(this.profileKey);// Redirect to Auth0 logout endpoint\nwindow.location.href=`https://${this.domain}/v2/logout?client_id=${this.clientId}&returnTo=${encodeURIComponent(window.location.origin)}`;}isAuthenticated(){// Check if the user has an active session\nconst expiresAt=JSON.parse(localStorage.getItem('expires_at')||'0');return new Date().getTime()<expiresAt;}getUserProfile(){const profile=localStorage.getItem(this.profileKey);return profile?JSON.parse(profile):null;}getToken(){return localStorage.getItem('access_token');}}export default new AuthService();","map":{"version":3,"names":["config","AuthService","constructor","domain","auth0Domain","clientId","auth0ClientId","audience","tokenKey","profileKey","init","Promise","resolve","window","location","hash","includes","handleAuthentication","isAuthenticated","parseHash","access_token","setSession","substring","split","result","forEach","item","key","value","authResult","expiresAt","JSON","stringify","expires_in","Date","getTime","localStorage","setItem","id_token","getUserInfo","accessToken","url","fetch","headers","Authorization","then","response","json","profile","catch","error","console","login","redirectUri","origin","href","encodeURIComponent","logout","removeItem","parse","getItem","getUserProfile","getToken"],"sources":["C:/Users/Administrator/Desktop/aretialliance/areti-dash-crm/src/services/auth.js"],"sourcesContent":["// services/auth.js\r\nimport config from '../config';\r\n\r\nclass AuthService {\r\n  constructor() {\r\n    this.domain = config.auth0Domain;\r\n    this.clientId = config.auth0ClientId;\r\n    this.audience = config.audience;\r\n    this.tokenKey = 'auth_token';\r\n    this.profileKey = 'user_profile';\r\n  }\r\n\r\n  init() {\r\n    return new Promise((resolve) => {\r\n      // Check if user is returning from Auth0 (authentication callback)\r\n      if (window.location.hash.includes('access_token')) {\r\n        this.handleAuthentication();\r\n        resolve(true);\r\n      } else {\r\n        resolve(this.isAuthenticated());\r\n      }\r\n    });\r\n  }\r\n\r\n  handleAuthentication() {\r\n    const hash = this.parseHash(window.location.hash);\r\n    if (hash.access_token) {\r\n      this.setSession(hash);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  parseHash(hash) {\r\n    hash = hash.substring(1).split('&');\r\n    const result = {};\r\n    hash.forEach(item => {\r\n      const [key, value] = item.split('=');\r\n      result[key] = value;\r\n    });\r\n    return result;\r\n  }\r\n\r\n  setSession(authResult) {\r\n    // Set the time that the access token will expire\r\n    const expiresAt = JSON.stringify(\r\n      authResult.expires_in * 1000 + new Date().getTime()\r\n    );\r\n    localStorage.setItem('access_token', authResult.access_token);\r\n    localStorage.setItem('id_token', authResult.id_token);\r\n    localStorage.setItem('expires_at', expiresAt);\r\n    \r\n    // Fetch user profile\r\n    this.getUserInfo(authResult.access_token);\r\n  }\r\n\r\n  getUserInfo(accessToken) {\r\n    const url = `https://${this.domain}/userinfo`;\r\n    fetch(url, {\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`\r\n      }\r\n    })\r\n    .then(response => response.json())\r\n    .then(profile => {\r\n      localStorage.setItem(this.profileKey, JSON.stringify(profile));\r\n    })\r\n    .catch(error => console.error('Error fetching user profile:', error));\r\n  }\r\n\r\n  login() {\r\n    const redirectUri = `${window.location.origin}/callback`;\r\n    window.location.href = `https://${this.domain}/authorize?` +\r\n      `response_type=token&` +\r\n      `client_id=${this.clientId}&` +\r\n      `redirect_uri=${encodeURIComponent(redirectUri)}&` +\r\n      `audience=${encodeURIComponent(this.audience)}&` +\r\n      `scope=openid profile email`;\r\n  }\r\n\r\n  logout() {\r\n    // Clear all authentication data from localStorage\r\n    localStorage.removeItem('access_token');\r\n    localStorage.removeItem('id_token');\r\n    localStorage.removeItem('expires_at');\r\n    localStorage.removeItem(this.profileKey);\r\n    \r\n    // Redirect to Auth0 logout endpoint\r\n    window.location.href = `https://${this.domain}/v2/logout?client_id=${this.clientId}&returnTo=${encodeURIComponent(window.location.origin)}`;\r\n  }\r\n\r\n  isAuthenticated() {\r\n    // Check if the user has an active session\r\n    const expiresAt = JSON.parse(localStorage.getItem('expires_at') || '0');\r\n    return new Date().getTime() < expiresAt;\r\n  }\r\n\r\n  getUserProfile() {\r\n    const profile = localStorage.getItem(this.profileKey);\r\n    return profile ? JSON.parse(profile) : null;\r\n  }\r\n\r\n  getToken() {\r\n    return localStorage.getItem('access_token');\r\n  }\r\n}\r\n\r\nexport default new AuthService();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}