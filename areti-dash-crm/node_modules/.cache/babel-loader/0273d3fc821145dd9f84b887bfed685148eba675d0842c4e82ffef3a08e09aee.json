{"ast":null,"code":"// services/auth.js\nimport config from '../config';\nclass AuthService {\n  constructor() {\n    this.domain = config.auth0Domain;\n    this.clientId = config.auth0ClientId;\n    this.audience = config.audience;\n    this.tokenKey = 'auth_token';\n    this.profileKey = 'user_profile';\n  }\n  init() {\n    return new Promise(resolve => {\n      // Check if user is returning from Auth0 (authentication callback)\n      if (window.location.hash.includes('access_token')) {\n        this.handleAuthentication();\n        resolve(true);\n      } else {\n        resolve(this.isAuthenticated());\n      }\n    });\n  }\n  handleAuthentication() {\n    const hash = this.parseHash(window.location.hash);\n    if (hash.access_token) {\n      this.setSession(hash);\n      return true;\n    }\n    return false;\n  }\n  parseHash(hash) {\n    hash = hash.substring(1).split('&');\n    const result = {};\n    hash.forEach(item => {\n      const [key, value] = item.split('=');\n      result[key] = value;\n    });\n    return result;\n  }\n  setSession(authResult) {\n    // Set the time that the access token will expire\n    const expiresAt = JSON.stringify(authResult.expires_in * 1000 + new Date().getTime());\n    localStorage.setItem('access_token', authResult.access_token);\n    localStorage.setItem('id_token', authResult.id_token);\n    localStorage.setItem('expires_at', expiresAt);\n\n    // Fetch user profile\n    this.getUserInfo(authResult.access_token);\n  }\n  getUserInfo(accessToken) {\n    const url = `https://${this.domain}/userinfo`;\n    fetch(url, {\n      headers: {\n        Authorization: `Bearer ${accessToken}`\n      }\n    }).then(response => response.json()).then(profile => {\n      localStorage.setItem(this.profileKey, JSON.stringify(profile));\n    }).catch(error => console.error('Error fetching user profile:', error));\n  }\n  login() {\n    const redirectUri = `${window.location.origin}/callback`;\n    window.location.href = `https://${this.domain}/authorize?` + `response_type=token&` + `client_id=${this.clientId}&` + `redirect_uri=${encodeURIComponent(redirectUri)}&` + `audience=${encodeURIComponent(this.audience)}&` + `scope=openid profile email`;\n  }\n  logout() {\n    // Clear all authentication data from localStorage\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('id_token');\n    localStorage.removeItem('expires_at');\n    localStorage.removeItem(this.profileKey);\n\n    // Redirect to Auth0 logout endpoint\n    window.location.href = `https://${this.domain}/v2/logout?client_id=${this.clientId}&returnTo=${encodeURIComponent(window.location.origin)}`;\n  }\n  isAuthenticated() {\n    // Check if the user has an active session\n    const expiresAt = JSON.parse(localStorage.getItem('expires_at') || '0');\n    return new Date().getTime() < expiresAt;\n  }\n  getUserProfile() {\n    const profile = localStorage.getItem(this.profileKey);\n    return profile ? JSON.parse(profile) : null;\n  }\n  getToken() {\n    return localStorage.getItem('access_token');\n  }\n}\nexport default new AuthService();","map":{"version":3,"names":["config","AuthService","constructor","domain","auth0Domain","clientId","auth0ClientId","audience","tokenKey","profileKey","init","Promise","resolve","window","location","hash","includes","handleAuthentication","isAuthenticated","parseHash","access_token","setSession","substring","split","result","forEach","item","key","value","authResult","expiresAt","JSON","stringify","expires_in","Date","getTime","localStorage","setItem","id_token","getUserInfo","accessToken","url","fetch","headers","Authorization","then","response","json","profile","catch","error","console","login","redirectUri","origin","href","encodeURIComponent","logout","removeItem","parse","getItem","getUserProfile","getToken"],"sources":["C:/Users/Administrator/Desktop/aretialliance/areti-dash-crm/src/services/auth.js"],"sourcesContent":["// services/auth.js\r\nimport config from '../config';\r\n\r\nclass AuthService {\r\n  constructor() {\r\n    this.domain = config.auth0Domain;\r\n    this.clientId = config.auth0ClientId;\r\n    this.audience = config.audience;\r\n    this.tokenKey = 'auth_token';\r\n    this.profileKey = 'user_profile';\r\n  }\r\n\r\n  init() {\r\n    return new Promise((resolve) => {\r\n      // Check if user is returning from Auth0 (authentication callback)\r\n      if (window.location.hash.includes('access_token')) {\r\n        this.handleAuthentication();\r\n        resolve(true);\r\n      } else {\r\n        resolve(this.isAuthenticated());\r\n      }\r\n    });\r\n  }\r\n\r\n  handleAuthentication() {\r\n    const hash = this.parseHash(window.location.hash);\r\n    if (hash.access_token) {\r\n      this.setSession(hash);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  parseHash(hash) {\r\n    hash = hash.substring(1).split('&');\r\n    const result = {};\r\n    hash.forEach(item => {\r\n      const [key, value] = item.split('=');\r\n      result[key] = value;\r\n    });\r\n    return result;\r\n  }\r\n\r\n  setSession(authResult) {\r\n    // Set the time that the access token will expire\r\n    const expiresAt = JSON.stringify(\r\n      authResult.expires_in * 1000 + new Date().getTime()\r\n    );\r\n    localStorage.setItem('access_token', authResult.access_token);\r\n    localStorage.setItem('id_token', authResult.id_token);\r\n    localStorage.setItem('expires_at', expiresAt);\r\n    \r\n    // Fetch user profile\r\n    this.getUserInfo(authResult.access_token);\r\n  }\r\n\r\n  getUserInfo(accessToken) {\r\n    const url = `https://${this.domain}/userinfo`;\r\n    fetch(url, {\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`\r\n      }\r\n    })\r\n    .then(response => response.json())\r\n    .then(profile => {\r\n      localStorage.setItem(this.profileKey, JSON.stringify(profile));\r\n    })\r\n    .catch(error => console.error('Error fetching user profile:', error));\r\n  }\r\n\r\n  login() {\r\n    const redirectUri = `${window.location.origin}/callback`;\r\n    window.location.href = `https://${this.domain}/authorize?` +\r\n      `response_type=token&` +\r\n      `client_id=${this.clientId}&` +\r\n      `redirect_uri=${encodeURIComponent(redirectUri)}&` +\r\n      `audience=${encodeURIComponent(this.audience)}&` +\r\n      `scope=openid profile email`;\r\n  }\r\n\r\n  logout() {\r\n    // Clear all authentication data from localStorage\r\n    localStorage.removeItem('access_token');\r\n    localStorage.removeItem('id_token');\r\n    localStorage.removeItem('expires_at');\r\n    localStorage.removeItem(this.profileKey);\r\n    \r\n    // Redirect to Auth0 logout endpoint\r\n    window.location.href = `https://${this.domain}/v2/logout?client_id=${this.clientId}&returnTo=${encodeURIComponent(window.location.origin)}`;\r\n  }\r\n\r\n  isAuthenticated() {\r\n    // Check if the user has an active session\r\n    const expiresAt = JSON.parse(localStorage.getItem('expires_at') || '0');\r\n    return new Date().getTime() < expiresAt;\r\n  }\r\n\r\n  getUserProfile() {\r\n    const profile = localStorage.getItem(this.profileKey);\r\n    return profile ? JSON.parse(profile) : null;\r\n  }\r\n\r\n  getToken() {\r\n    return localStorage.getItem('access_token');\r\n  }\r\n}\r\n\r\nexport default new AuthService();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}