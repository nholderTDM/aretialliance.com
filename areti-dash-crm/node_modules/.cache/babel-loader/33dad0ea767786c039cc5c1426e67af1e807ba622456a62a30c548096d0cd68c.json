{"ast":null,"code":"// services/api.js\nconst BASE_URL=process.env.REACT_APP_API_URL||'/api';class ApiService{// Generic request handler\nstatic async request(endpoint){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};const token=localStorage.getItem('token');// Default headers\nconst headers={'Content-Type':'application/json',...(token?{'Authorization':`Bearer ${token}`}:{}),...options.headers};const config={...options,headers};try{const response=await fetch(`${BASE_URL}/${endpoint}`,config);if(!response.ok){const error=await response.json();throw new Error(error.message||'API request failed');}return await response.json();}catch(error){console.error(`API Error in ${endpoint}:`,error);throw error;}}// Driver methods\nstatic async getDrivers(){return this.request('drivers');}static async getDriver(id){return this.request(`drivers/${id}`);}static async createDriver(data){return this.request('drivers',{method:'POST',body:JSON.stringify(data)});}static async updateDriver(id,data){return this.request(`drivers/${id}`,{method:'PUT',body:JSON.stringify(data)});}static async deleteDriver(id){return this.request(`drivers/${id}`,{method:'DELETE'});}// Other API methods for contacts, organizations, etc.\n// Include your existing methods here\nstatic async getContacts(){return this.request('contacts');}static async createContact(data){return this.request('contacts',{method:'POST',body:JSON.stringify(data)});}static async updateContact(id,data){return this.request(`contacts/${id}`,{method:'PUT',body:JSON.stringify(data)});}static async deleteContact(id){return this.request(`contacts/${id}`,{method:'DELETE'});}// Add other existing API methods as needed\n}export default ApiService;","map":{"version":3,"names":["BASE_URL","process","env","REACT_APP_API_URL","ApiService","request","endpoint","options","arguments","length","undefined","token","localStorage","getItem","headers","config","response","fetch","ok","error","json","Error","message","console","getDrivers","getDriver","id","createDriver","data","method","body","JSON","stringify","updateDriver","deleteDriver","getContacts","createContact","updateContact","deleteContact"],"sources":["C:/Users/Administrator/Desktop/aretialliance/areti-dash-crm/src/services/api.js"],"sourcesContent":["// services/api.js\r\n\r\nconst BASE_URL = process.env.REACT_APP_API_URL || '/api';\r\n\r\nclass ApiService {\r\n  // Generic request handler\r\n  static async request(endpoint, options = {}) {\r\n    const token = localStorage.getItem('token');\r\n    \r\n    // Default headers\r\n    const headers = {\r\n      'Content-Type': 'application/json',\r\n      ...(token ? { 'Authorization': `Bearer ${token}` } : {}),\r\n      ...options.headers\r\n    };\r\n    \r\n    const config = {\r\n      ...options,\r\n      headers\r\n    };\r\n    \r\n    try {\r\n      const response = await fetch(`${BASE_URL}/${endpoint}`, config);\r\n      \r\n      if (!response.ok) {\r\n        const error = await response.json();\r\n        throw new Error(error.message || 'API request failed');\r\n      }\r\n      \r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error(`API Error in ${endpoint}:`, error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  // Driver methods\r\n  static async getDrivers() {\r\n    return this.request('drivers');\r\n  }\r\n  \r\n  static async getDriver(id) {\r\n    return this.request(`drivers/${id}`);\r\n  }\r\n  \r\n  static async createDriver(data) {\r\n    return this.request('drivers', {\r\n      method: 'POST',\r\n      body: JSON.stringify(data)\r\n    });\r\n  }\r\n  \r\n  static async updateDriver(id, data) {\r\n    return this.request(`drivers/${id}`, {\r\n      method: 'PUT',\r\n      body: JSON.stringify(data)\r\n    });\r\n  }\r\n  \r\n  static async deleteDriver(id) {\r\n    return this.request(`drivers/${id}`, {\r\n      method: 'DELETE'\r\n    });\r\n  }\r\n  \r\n  // Other API methods for contacts, organizations, etc.\r\n  // Include your existing methods here\r\n  \r\n  static async getContacts() {\r\n    return this.request('contacts');\r\n  }\r\n  \r\n  static async createContact(data) {\r\n    return this.request('contacts', {\r\n      method: 'POST',\r\n      body: JSON.stringify(data)\r\n    });\r\n  }\r\n  \r\n  static async updateContact(id, data) {\r\n    return this.request(`contacts/${id}`, {\r\n      method: 'PUT',\r\n      body: JSON.stringify(data)\r\n    });\r\n  }\r\n  \r\n  static async deleteContact(id) {\r\n    return this.request(`contacts/${id}`, {\r\n      method: 'DELETE'\r\n    });\r\n  }\r\n  \r\n  // Add other existing API methods as needed\r\n}\r\n\r\nexport default ApiService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}